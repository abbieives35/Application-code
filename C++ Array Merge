//vector arrays
//nums1 and nums2 m and n are the amount of elements  of the two arrays
//arrays are already sorted in non decreasing order
//need to be merged and sorted in non-decreasing order
//new array should be stored in num1 whose size is m + n
#include <iostream>
#include <vector>
using namespace std;

void merge(vector<int>& nums1, int m, std::vector<int>& nums2, int n){
int i = m - 1; // Index for nums1
int j = n - 1; // Index for nums2
int k = m + n - 1; // Index for merged array
while(i >= 0 && j >= 0){ //while arrays are not empty

    if (nums1[i] > nums2[j]) {
        nums1[k] = nums1[i];
        i--;
    } else {
        nums1[k] = nums2[j];
        j--;
    }
    k--;
    
    }
    cout << "merged array is:  " << endl;
    for(int i = 0; i < (m + n); i++){
        cout << nums1[i] << endl;
       
}


// Copy any remaining elements from nums2 to nums1
    while (j >= 0) {
        nums1[k] = nums2[j];
        j--;
        k--;
    }
}
int main(){
    vector<int> nums1 = {1,2,3,0,0,0};
    vector<int> nums2 = {4,5,6};
    int m = 3;
    int n = 3;
    merge(nums1, m, nums2, n);
    return 0;

    
}
